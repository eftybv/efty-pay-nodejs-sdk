// source: common/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.eftypay.common.ComparisonOperator', null, global);
goog.exportSymbol('proto.eftypay.common.Condition', null, global);
goog.exportSymbol('proto.eftypay.common.Condition.ValueCase', null, global);
goog.exportSymbol('proto.eftypay.common.ConditionOperator', null, global);
goog.exportSymbol('proto.eftypay.common.DbInt64', null, global);
goog.exportSymbol('proto.eftypay.common.GetObjectRequest', null, global);
goog.exportSymbol('proto.eftypay.common.Id', null, global);
goog.exportSymbol('proto.eftypay.common.ListRequest', null, global);
goog.exportSymbol('proto.eftypay.common.OrderDirection', null, global);
goog.exportSymbol('proto.eftypay.common.Query', null, global);
goog.exportSymbol('proto.eftypay.common.ReturnString', null, global);
goog.exportSymbol('proto.eftypay.common.ReturnStrings', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.common.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eftypay.common.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.common.Id.displayName = 'proto.eftypay.common.Id';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.common.ReturnString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eftypay.common.ReturnString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.common.ReturnString.displayName = 'proto.eftypay.common.ReturnString';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.common.ReturnStrings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.eftypay.common.ReturnStrings.repeatedFields_, null);
};
goog.inherits(proto.eftypay.common.ReturnStrings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.common.ReturnStrings.displayName = 'proto.eftypay.common.ReturnStrings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.common.GetObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eftypay.common.GetObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.common.GetObjectRequest.displayName = 'proto.eftypay.common.GetObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.common.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.eftypay.common.Query.repeatedFields_, null);
};
goog.inherits(proto.eftypay.common.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.common.Query.displayName = 'proto.eftypay.common.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.common.Condition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.eftypay.common.Condition.oneofGroups_);
};
goog.inherits(proto.eftypay.common.Condition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.common.Condition.displayName = 'proto.eftypay.common.Condition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.common.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.eftypay.common.ListRequest.repeatedFields_, null);
};
goog.inherits(proto.eftypay.common.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.common.ListRequest.displayName = 'proto.eftypay.common.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.common.DbInt64 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eftypay.common.DbInt64, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.common.DbInt64.displayName = 'proto.eftypay.common.DbInt64';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.common.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.common.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.common.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    integratorid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.common.Id}
 */
proto.eftypay.common.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.common.Id;
  return proto.eftypay.common.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.common.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.common.Id}
 */
proto.eftypay.common.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegratorid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.common.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.common.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.common.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIntegratorid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.eftypay.common.Id.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.Id} returns this
 */
proto.eftypay.common.Id.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string integratorId = 2;
 * @return {string}
 */
proto.eftypay.common.Id.prototype.getIntegratorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.Id} returns this
 */
proto.eftypay.common.Id.prototype.setIntegratorid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.common.ReturnString.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.common.ReturnString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.common.ReturnString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.ReturnString.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.common.ReturnString}
 */
proto.eftypay.common.ReturnString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.common.ReturnString;
  return proto.eftypay.common.ReturnString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.common.ReturnString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.common.ReturnString}
 */
proto.eftypay.common.ReturnString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.common.ReturnString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.common.ReturnString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.common.ReturnString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.ReturnString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.eftypay.common.ReturnString.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.ReturnString} returns this
 */
proto.eftypay.common.ReturnString.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.eftypay.common.ReturnStrings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.common.ReturnStrings.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.common.ReturnStrings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.common.ReturnStrings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.ReturnStrings.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.common.ReturnStrings}
 */
proto.eftypay.common.ReturnStrings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.common.ReturnStrings;
  return proto.eftypay.common.ReturnStrings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.common.ReturnStrings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.common.ReturnStrings}
 */
proto.eftypay.common.ReturnStrings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.common.ReturnStrings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.common.ReturnStrings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.common.ReturnStrings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.ReturnStrings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.eftypay.common.ReturnStrings.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.eftypay.common.ReturnStrings} returns this
 */
proto.eftypay.common.ReturnStrings.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.eftypay.common.ReturnStrings} returns this
 */
proto.eftypay.common.ReturnStrings.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eftypay.common.ReturnStrings} returns this
 */
proto.eftypay.common.ReturnStrings.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.common.GetObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.common.GetObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.common.GetObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.GetObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldvalue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    integratorid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.common.GetObjectRequest}
 */
proto.eftypay.common.GetObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.common.GetObjectRequest;
  return proto.eftypay.common.GetObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.common.GetObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.common.GetObjectRequest}
 */
proto.eftypay.common.GetObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldvalue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegratorid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.common.GetObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.common.GetObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.common.GetObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.GetObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldvalue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIntegratorid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string fieldValue = 1;
 * @return {string}
 */
proto.eftypay.common.GetObjectRequest.prototype.getFieldvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.GetObjectRequest} returns this
 */
proto.eftypay.common.GetObjectRequest.prototype.setFieldvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string integratorId = 2;
 * @return {string}
 */
proto.eftypay.common.GetObjectRequest.prototype.getIntegratorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.GetObjectRequest} returns this
 */
proto.eftypay.common.GetObjectRequest.prototype.setIntegratorid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.eftypay.common.Query.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.common.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.common.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.common.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    conditionoperator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fieldconditionsList: jspb.Message.toObjectList(msg.getFieldconditionsList(),
    proto.eftypay.common.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.common.Query}
 */
proto.eftypay.common.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.common.Query;
  return proto.eftypay.common.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.common.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.common.Query}
 */
proto.eftypay.common.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.eftypay.common.ConditionOperator} */ (reader.readEnum());
      msg.setConditionoperator(value);
      break;
    case 2:
      var value = new proto.eftypay.common.Condition;
      reader.readMessage(value,proto.eftypay.common.Condition.deserializeBinaryFromReader);
      msg.addFieldconditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.common.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.common.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.common.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConditionoperator();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFieldconditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.eftypay.common.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConditionOperator conditionOperator = 1;
 * @return {!proto.eftypay.common.ConditionOperator}
 */
proto.eftypay.common.Query.prototype.getConditionoperator = function() {
  return /** @type {!proto.eftypay.common.ConditionOperator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.eftypay.common.ConditionOperator} value
 * @return {!proto.eftypay.common.Query} returns this
 */
proto.eftypay.common.Query.prototype.setConditionoperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Condition fieldConditions = 2;
 * @return {!Array<!proto.eftypay.common.Condition>}
 */
proto.eftypay.common.Query.prototype.getFieldconditionsList = function() {
  return /** @type{!Array<!proto.eftypay.common.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.eftypay.common.Condition, 2));
};


/**
 * @param {!Array<!proto.eftypay.common.Condition>} value
 * @return {!proto.eftypay.common.Query} returns this
*/
proto.eftypay.common.Query.prototype.setFieldconditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.eftypay.common.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.eftypay.common.Condition}
 */
proto.eftypay.common.Query.prototype.addFieldconditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.eftypay.common.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eftypay.common.Query} returns this
 */
proto.eftypay.common.Query.prototype.clearFieldconditionsList = function() {
  return this.setFieldconditionsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.eftypay.common.Condition.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.eftypay.common.Condition.ValueCase = {
  VALUE_NOT_SET: 0,
  STRINGVALUE: 3,
  INTVALUE: 4
};

/**
 * @return {proto.eftypay.common.Condition.ValueCase}
 */
proto.eftypay.common.Condition.prototype.getValueCase = function() {
  return /** @type {proto.eftypay.common.Condition.ValueCase} */(jspb.Message.computeOneofCase(this, proto.eftypay.common.Condition.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.common.Condition.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.common.Condition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.common.Condition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.Condition.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, 0),
    stringvalue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    intvalue: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.common.Condition}
 */
proto.eftypay.common.Condition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.common.Condition;
  return proto.eftypay.common.Condition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.common.Condition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.common.Condition}
 */
proto.eftypay.common.Condition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {!proto.eftypay.common.ComparisonOperator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringvalue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.common.Condition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.common.Condition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.common.Condition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.Condition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.eftypay.common.Condition.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.Condition} returns this
 */
proto.eftypay.common.Condition.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ComparisonOperator operator = 2;
 * @return {!proto.eftypay.common.ComparisonOperator}
 */
proto.eftypay.common.Condition.prototype.getOperator = function() {
  return /** @type {!proto.eftypay.common.ComparisonOperator} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.eftypay.common.ComparisonOperator} value
 * @return {!proto.eftypay.common.Condition} returns this
 */
proto.eftypay.common.Condition.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string stringValue = 3;
 * @return {string}
 */
proto.eftypay.common.Condition.prototype.getStringvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.Condition} returns this
 */
proto.eftypay.common.Condition.prototype.setStringvalue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.eftypay.common.Condition.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.eftypay.common.Condition} returns this
 */
proto.eftypay.common.Condition.prototype.clearStringvalue = function() {
  return jspb.Message.setOneofField(this, 3, proto.eftypay.common.Condition.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.eftypay.common.Condition.prototype.hasStringvalue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 intValue = 4;
 * @return {number}
 */
proto.eftypay.common.Condition.prototype.getIntvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.eftypay.common.Condition} returns this
 */
proto.eftypay.common.Condition.prototype.setIntvalue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.eftypay.common.Condition.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.eftypay.common.Condition} returns this
 */
proto.eftypay.common.Condition.prototype.clearIntvalue = function() {
  return jspb.Message.setOneofField(this, 4, proto.eftypay.common.Condition.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.eftypay.common.Condition.prototype.hasIntvalue = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.eftypay.common.ListRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.common.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.common.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.common.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startafter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.eftypay.common.Query.toObject, includeInstance),
    orderbyfield: jspb.Message.getFieldWithDefault(msg, 4, ""),
    order: jspb.Message.getFieldWithDefault(msg, 5, 0),
    integratorid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.common.ListRequest}
 */
proto.eftypay.common.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.common.ListRequest;
  return proto.eftypay.common.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.common.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.common.ListRequest}
 */
proto.eftypay.common.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartafter(value);
      break;
    case 3:
      var value = new proto.eftypay.common.Query;
      reader.readMessage(value,proto.eftypay.common.Query.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderbyfield(value);
      break;
    case 5:
      var value = /** @type {!proto.eftypay.common.OrderDirection} */ (reader.readEnum());
      msg.setOrder(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegratorid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.common.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.common.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.common.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStartafter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.eftypay.common.Query.serializeBinaryToWriter
    );
  }
  f = message.getOrderbyfield();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getIntegratorid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.eftypay.common.ListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.eftypay.common.ListRequest} returns this
 */
proto.eftypay.common.ListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string startAfter = 2;
 * @return {string}
 */
proto.eftypay.common.ListRequest.prototype.getStartafter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.ListRequest} returns this
 */
proto.eftypay.common.ListRequest.prototype.setStartafter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Query queries = 3;
 * @return {!Array<!proto.eftypay.common.Query>}
 */
proto.eftypay.common.ListRequest.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.eftypay.common.Query>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.eftypay.common.Query, 3));
};


/**
 * @param {!Array<!proto.eftypay.common.Query>} value
 * @return {!proto.eftypay.common.ListRequest} returns this
*/
proto.eftypay.common.ListRequest.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.eftypay.common.Query=} opt_value
 * @param {number=} opt_index
 * @return {!proto.eftypay.common.Query}
 */
proto.eftypay.common.ListRequest.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.eftypay.common.Query, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eftypay.common.ListRequest} returns this
 */
proto.eftypay.common.ListRequest.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};


/**
 * optional string orderByField = 4;
 * @return {string}
 */
proto.eftypay.common.ListRequest.prototype.getOrderbyfield = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.ListRequest} returns this
 */
proto.eftypay.common.ListRequest.prototype.setOrderbyfield = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional OrderDirection order = 5;
 * @return {!proto.eftypay.common.OrderDirection}
 */
proto.eftypay.common.ListRequest.prototype.getOrder = function() {
  return /** @type {!proto.eftypay.common.OrderDirection} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.eftypay.common.OrderDirection} value
 * @return {!proto.eftypay.common.ListRequest} returns this
 */
proto.eftypay.common.ListRequest.prototype.setOrder = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string integratorId = 6;
 * @return {string}
 */
proto.eftypay.common.ListRequest.prototype.getIntegratorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.common.ListRequest} returns this
 */
proto.eftypay.common.ListRequest.prototype.setIntegratorid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.common.DbInt64.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.common.DbInt64.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.common.DbInt64} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.DbInt64.toObject = function(includeInstance, msg) {
  var f, obj = {
    intvalue: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.common.DbInt64}
 */
proto.eftypay.common.DbInt64.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.common.DbInt64;
  return proto.eftypay.common.DbInt64.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.common.DbInt64} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.common.DbInt64}
 */
proto.eftypay.common.DbInt64.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.common.DbInt64.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.common.DbInt64.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.common.DbInt64} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.common.DbInt64.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntvalue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 intValue = 1;
 * @return {number}
 */
proto.eftypay.common.DbInt64.prototype.getIntvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.eftypay.common.DbInt64} returns this
 */
proto.eftypay.common.DbInt64.prototype.setIntvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.eftypay.common.ConditionOperator = {
  CONDITION_OPERATOR_NONE: 0,
  CONDITION_OPERATOR_AND: 1,
  CONDITION_OPERATOR_OR: 2,
  CONDITION_OPERATOR_NOT: 3
};

/**
 * @enum {number}
 */
proto.eftypay.common.ComparisonOperator = {
  COMPARISON_OPERATOR_NONE: 0,
  COMPARISON_OPERATOR_EQUALS: 1,
  COMPARISON_OPERATOR_GTE: 2,
  COMPARISON_OPERATOR_LTE: 3,
  COMPARISON_OPERATOR_GT: 4,
  COMPARISON_OPERATOR_LT: 5,
  COMPARISON_OPERATOR_NOT_EQUALS: 6
};

/**
 * @enum {number}
 */
proto.eftypay.common.OrderDirection = {
  ORDER_DIRECTION_NONE: 0,
  ORDER_DIRECTION_ASC: 1,
  ORDER_DIRECTION_DESC: 2
};

goog.object.extend(exports, proto.eftypay.common);
