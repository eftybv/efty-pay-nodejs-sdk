// source: public/payments/mangopay/checkout.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.eftypay.payments.mangopay.CardType', null, global);
goog.exportSymbol('proto.eftypay.payments.mangopay.CheckoutStatus', null, global);
goog.exportSymbol('proto.eftypay.payments.mangopay.KycLevel', null, global);
goog.exportSymbol('proto.eftypay.payments.mangopay.MangopayCheckoutDetails', null, global);
goog.exportSymbol('proto.eftypay.payments.mangopay.MangopayDetails', null, global);
goog.exportSymbol('proto.eftypay.payments.mangopay.PaymentMethod', null, global);
goog.exportSymbol('proto.eftypay.payments.mangopay.UserCategory', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.payments.mangopay.MangopayDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eftypay.payments.mangopay.MangopayDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.payments.mangopay.MangopayDetails.displayName = 'proto.eftypay.payments.mangopay.MangopayDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eftypay.payments.mangopay.MangopayCheckoutDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eftypay.payments.mangopay.MangopayCheckoutDetails.displayName = 'proto.eftypay.payments.mangopay.MangopayCheckoutDetails';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.payments.mangopay.MangopayDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.payments.mangopay.MangopayDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.payments.mangopay.MangopayDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    onboardassellerwithmangopay: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    usercategory: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    kyclevel: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.payments.mangopay.MangopayDetails}
 */
proto.eftypay.payments.mangopay.MangopayDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.payments.mangopay.MangopayDetails;
  return proto.eftypay.payments.mangopay.MangopayDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.payments.mangopay.MangopayDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.payments.mangopay.MangopayDetails}
 */
proto.eftypay.payments.mangopay.MangopayDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnboardassellerwithmangopay(value);
      break;
    case 2:
      var value = /** @type {!proto.eftypay.payments.mangopay.UserCategory} */ (reader.readEnum());
      msg.setUsercategory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {!proto.eftypay.payments.mangopay.KycLevel} */ (reader.readEnum());
      msg.setKyclevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.payments.mangopay.MangopayDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.payments.mangopay.MangopayDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.payments.mangopay.MangopayDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnboardassellerwithmangopay();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUsercategory();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKyclevel();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional bool onboardAsSellerWithMangopay = 1;
 * @return {boolean}
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.getOnboardassellerwithmangopay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eftypay.payments.mangopay.MangopayDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.setOnboardassellerwithmangopay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional UserCategory userCategory = 2;
 * @return {!proto.eftypay.payments.mangopay.UserCategory}
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.getUsercategory = function() {
  return /** @type {!proto.eftypay.payments.mangopay.UserCategory} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.eftypay.payments.mangopay.UserCategory} value
 * @return {!proto.eftypay.payments.mangopay.MangopayDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.setUsercategory = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string userId = 3;
 * @return {string}
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.payments.mangopay.MangopayDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional KycLevel kycLevel = 4;
 * @return {!proto.eftypay.payments.mangopay.KycLevel}
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.getKyclevel = function() {
  return /** @type {!proto.eftypay.payments.mangopay.KycLevel} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.eftypay.payments.mangopay.KycLevel} value
 * @return {!proto.eftypay.payments.mangopay.MangopayDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayDetails.prototype.setKyclevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.eftypay.payments.mangopay.MangopayCheckoutDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    mangopaypayinid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentmethod: jspb.Message.getFieldWithDefault(msg, 2, 0),
    checkoutstatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    payindetailsMap: (f = msg.getPayindetailsMap()) ? f.toObject(includeInstance, undefined) : [],
    haspayinamountdiscrepancy: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    amountreceivedbymangopay: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eftypay.payments.mangopay.MangopayCheckoutDetails;
  return proto.eftypay.payments.mangopay.MangopayCheckoutDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMangopaypayinid(value);
      break;
    case 2:
      var value = /** @type {!proto.eftypay.payments.mangopay.PaymentMethod} */ (reader.readEnum());
      msg.setPaymentmethod(value);
      break;
    case 3:
      var value = /** @type {!proto.eftypay.payments.mangopay.CheckoutStatus} */ (reader.readEnum());
      msg.setCheckoutstatus(value);
      break;
    case 4:
      var value = msg.getPayindetailsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHaspayinamountdiscrepancy(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmountreceivedbymangopay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eftypay.payments.mangopay.MangopayCheckoutDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMangopaypayinid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaymentmethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCheckoutstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPayindetailsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getHaspayinamountdiscrepancy();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getAmountreceivedbymangopay();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional string mangopayPayInId = 1;
 * @return {string}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.getMangopaypayinid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.setMangopaypayinid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PaymentMethod paymentMethod = 2;
 * @return {!proto.eftypay.payments.mangopay.PaymentMethod}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.getPaymentmethod = function() {
  return /** @type {!proto.eftypay.payments.mangopay.PaymentMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.eftypay.payments.mangopay.PaymentMethod} value
 * @return {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.setPaymentmethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional CheckoutStatus checkoutStatus = 3;
 * @return {!proto.eftypay.payments.mangopay.CheckoutStatus}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.getCheckoutstatus = function() {
  return /** @type {!proto.eftypay.payments.mangopay.CheckoutStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.eftypay.payments.mangopay.CheckoutStatus} value
 * @return {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.setCheckoutstatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * map<string, string> payInDetails = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.getPayindetailsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.clearPayindetailsMap = function() {
  this.getPayindetailsMap().clear();
  return this;};


/**
 * optional bool hasPayInAmountDiscrepancy = 5;
 * @return {boolean}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.getHaspayinamountdiscrepancy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.setHaspayinamountdiscrepancy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int64 amountReceivedByMangopay = 6;
 * @return {number}
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.getAmountreceivedbymangopay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.eftypay.payments.mangopay.MangopayCheckoutDetails} returns this
 */
proto.eftypay.payments.mangopay.MangopayCheckoutDetails.prototype.setAmountreceivedbymangopay = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.eftypay.payments.mangopay.UserCategory = {
  USER_TYPE_NONE: 0,
  PAYER: 1,
  OWNER: 2
};

/**
 * @enum {number}
 */
proto.eftypay.payments.mangopay.KycLevel = {
  KYC_LEVEL_NONE: 0,
  LIGHT: 1,
  REGULAR: 2
};

/**
 * @enum {number}
 */
proto.eftypay.payments.mangopay.CheckoutStatus = {
  CHECKOUT_STATUS_NONE: 0,
  INITIATED: 1,
  BUYER_DETAILS_PROVIDED: 2,
  BUYER_CREATED_WITH_MANGOPAY: 3,
  PAYMENT_METHOD_SELECTED: 4,
  PAYMENT_SUCCEEDED: 5,
  PAYMENT_FAILED: 6,
  COMPLETE: 7
};

/**
 * @enum {number}
 */
proto.eftypay.payments.mangopay.PaymentMethod = {
  PAYMENT_METHOD_NONE: 0,
  BANK_WIRE: 1,
  CARD: 2,
  IDEAL: 3,
  PAY_PAL: 4
};

/**
 * @enum {number}
 */
proto.eftypay.payments.mangopay.CardType = {
  CARD_TYPE_NONE: 0,
  CB_VISA_MASTERCARD: 1,
  AMEX: 2,
  MAESTRO: 3,
  BCMC: 4
};

goog.object.extend(exports, proto.eftypay.payments.mangopay);
